@startuml

abstract class Command {
    Event[] execute()
}

abstract class Event
abstract class EventStore   {
    add(Event event)
    subscribe(Event event)
}
abstract StatePersister
abstract class Reactor

class CommandHandler {
    EventStore eventStore
    {method} Event[] process(Command command)
}

Command -down- Event : produces >
Event -down- EventStore : flows into >
EventStore -down- StatePersister : subscribes <
EventStore -right- Reactor : subscribes <


@enduml